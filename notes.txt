bookmyspot 
	SessionController
		signup	
		login
		forgetpassword -> ForgetPassword.jsp ->add hyperlink for Login   
igate 
	SessionController 
		signup
		login 
ecom 
	SessionController 
		signup
		login 
		

Signup: 		
	firstName
	lastName
	email
	password
	confirmPassword
	gender
	dateOfBirth***
	contactNum
	 	[submit] 
 
Login:
	email
	password 
		[submit] 
ForgetPassword: 
		email : 
			[submit] 


ER 
DFD 
USECASE 
CLASS
ACTIVITY 

feature.doc 
	signup
	login
	forgetpassword
	parking add 
	parking delete 
	parking list 
	
	
----------------------------------------

list logic 

	1) controller -> @Getmapping("listmember")
	2) public String listMember(){
			return "ListMember";//jsp name 
		} 	
	3) create a jsp -> WEB-INF/views/ListMember.jsp 
	
	4) get all the data from database to controller 
	   we will use repository -> finaAll() method 
	    public String listMember(){
		List<MemberEntity> memberList = repositoryMember.findAll(); // read all members from db to controller 
			return "ListMember";//jsp name 
		}
	
	5) how to send data from controller to jsp 
		//Model 
		model.addAttribute("memberList", memberList);
						//dataName , dataValue 
		
		public String listMember(){
		    List<MemberEntity> memberList = repositoryMember.findAll(); // read all members from db to controller 
			model.addAttribute("memberList", memberList);
			return "ListMember";//jsp name 
		}
		
	6) get for loop print 
		
	
	
	
---------------------------------------------------------------
JSTL  java standard tag lib --> 
	core********* 
	sql
	xml
	fmt
		core tag 
				if** 
				case 
				catch 
				out 
				set
				forEach** 
				forToken
				
---------------------------------------------------------------				
	
 email --> Welcome mail -> Signup 
 
 
 create service folder inside grownited folder 
 
 1) pom.xml jar file -> mail -> java mail 
 	project -> right click -> spring -> add/edit starter -> mail -> select -> next -> pom.xml ->
 		finish 
	
	
 2) mail -> gmail -> configuration -> 
 					application.properties {copy}
 					
	https://myaccount.google.com/apppasswords
	
3) code -> 
		JavaMailSender [copy] 

	
	
----------------------------------------------------

how to encode password using bcrypt 

1) pom.xml add spring security crypto lib [from google - maven ] 

2) now make your encoder singleton ready 
	put below code in your main java file where @SpringBootApplication written
	@Bean
	PasswordEncoder encoder() {
		return new BCryptPasswordEncoder(5);
	}
	
3) now create object using @Autowired and use in the method 
	//object creation 
	@Autowired
	PasswordEncoder encoder;
	
	//use 
	String encPassword = encoder.encode(userEntity.getPassword());
	userEntity.setPassword(encPassword);	
	
---------------------------------------------------------------------	
	
	signup -> plain text -> encrypt ->
			Bcrypt ->
						spring-security-crypto
						pom.xml-> manually 
						
			PasswordEncoder->singleton 
			Application.java -> @SpringBootApplication
			
			@Bean 
			PasswordEncoder getEncoder(){
			 	return new BcryptPasswordEncoder(); 
			}
	
			@Autowired 
			PasswordEncoder encoder;
	
	
			String ecryptedString = encoder.encode("plain");
---------------------------------------------------------------------	

create -> db save - > save(entity)
read   -> db select get all  [select * from users ] -> findAll()  
single read -> findById(memberId)

CRUD -> create read update delete 

----------------------------------------------------------

	Form 
Login.jsp 
		email
		password 
		
	
	
	
	
	
	webapp --> information -->
				session {otp}{pr,sec} {user info} 
				cookie {username,city,zipcode} 
				
				
	how to create session ?	
	public String authenticate(String email, String password,Model model,HttpSession session) 


	how to store user's information in session?
	session.setAttribute("key",value);
	
--------------------------------------------------------------------------

pagination ->
		client side ->
				datatable 
				
	
	1) jquery.js    -> this is dependent file for datatable.js 
					-> you will get it from your template
					-> official website 
					<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
					
	<script src="https://cdn.datatables.net/2.2.2/js/dataTables.min.js"></script>
	<script src="https://cdn.datatables.net/2.2.2/js/dataTables.bootstrap5.min.js"></script>
					
					 
				
	2) datatable.js -> you will get it from your template 
				    -> official website 
				    
				    						
	3) datatable.css -> you will get it from your template
			   	     -> official website 
			   	 	    <link  href="https://cdn.datatables.net/2.2.2/css/dataTables.bootstrap5.min.css" rel="stylesheet"/>
			   	     
			   	      	
	4) assign id to your table 
				<table id="myTable" >
				
				
	5)  initialize data table using below code ->
			<script type="text/javascript">
				$( document ).ready(function() {
					let table = new DataTable('#myTable');
				});					
			</script> 
			
----------------------------------------------------------------------
	
	
	FORGET PASSWORD :-> 
	
	
	user will click on forget password hyper link from login jsp 
	
	forgetpassword : url : Open ForgetPassword.jsp 
	
	In ForgetPassword.jsp We will ask email 
	
	on Submit of ForgetPassword.jsp it will call @Postmapping-> sendotp 
	
	send otp will read email and then it call findByEmail to check email is present or not 
	if present then we will get the user , generate the otp , set otp to the user object 
		and we will update using repositoryUser.save(user). 
		and then we will send mail using MailService. 
		and last we return ChagePassword.jsp 
	if not present then we will set error using model.addAttribute and then 
			open the ForgetPassword.jsp and display the error message. 
			
---------------------------------------------------------------
			
			
			
			
			
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	