bookmyspot 
	SessionController
		signup	
		login
		forgetpassword -> ForgetPassword.jsp ->add hyperlink for Login   
igate 
	SessionController 
		signup
		login 
ecom 
	SessionController 
		signup
		login 
		

Signup: 		
	firstName
	lastName
	email
	password
	confirmPassword
	gender
	dateOfBirth***
	contactNum
	 	[submit] 
 
Login:
	email
	password 
		[submit] 
ForgetPassword: 
		email : 
			[submit] 


ER 
DFD 
USECASE 
CLASS
ACTIVITY 

feature.doc 
	signup
	login
	forgetpassword
	parking add 
	parking delete 
	parking list 
	
	
----------------------------------------

list logic 

	1) controller -> @Getmapping("listmember")
	2) public String listMember(){
			return "ListMember";//jsp name 
		} 	
	3) create a jsp -> WEB-INF/views/ListMember.jsp 
	
	4) get all the data from database to controller 
	   we will use repository -> finaAll() method 
	    public String listMember(){
		List<MemberEntity> memberList = repositoryMember.findAll(); // read all members from db to controller 
			return "ListMember";//jsp name 
		}
	
	5) how to send data from controller to jsp 
		//Model 
		model.addAttribute("memberList", memberList);
						//dataName , dataValue 
		
		public String listMember(){
		    List<MemberEntity> memberList = repositoryMember.findAll(); // read all members from db to controller 
			model.addAttribute("memberList", memberList);
			return "ListMember";//jsp name 
		}
		
	6) get for loop print 
		
	
	
	
---------------------------------------------------------------
JSTL  java standard tag lib --> 
	core********* 
	sql
	xml
	fmt
		core tag 
				if** 
				case 
				catch 
				out 
				set
				forEach** 
				forToken
				
---------------------------------------------------------------				
	
 email --> Welcome mail -> Signup 
 
 
 create service folder inside grownited folder 
 
 1) pom.xml jar file -> mail -> java mail 
 	project -> right click -> spring -> add/edit starter -> mail -> select -> next -> pom.xml ->
 		finish 
	
	
 2) mail -> gmail -> configuration -> 
 					application.properties {copy}
 					
	https://myaccount.google.com/apppasswords
	
3) code -> 
		JavaMailSender [copy] 

	
	
----------------------------------------------------

how to encode password using bcrypt 

1) pom.xml add spring security crypto lib 

2) use bcrypt -> 	
	
	
	
	
	
	
	
	
	
	
	
	